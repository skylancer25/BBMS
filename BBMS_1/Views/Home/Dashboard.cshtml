@model BBMS_1.Models.UserModel

@{
    ViewData["Title"] = "User Profile";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>User Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        body {
            background-color: #f8f9fa;
        }

        .header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px;
            background: #1E3A8A;
            color: white;
            font-size: 1.5rem;
            gap: 15px;
        }

        .menu-toggle {
            font-size: 1rem;
            cursor: pointer;
            margin-right: 15px;
            margin-left: 20px;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #D0E8FF;
            color: #1E3A8A;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            font-weight: bold;
            text-transform: uppercase;
        }

        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            width: 250px;
            height: 100vh;
            background: #1E3A8A;
            color: white;
            padding: 20px;
            box-shadow: 2px 0px 10px rgba(0, 0, 0, 0.2);
            transform: translateX(-100%);
            transition: transform 0.3s ease-in-out;
            z-index: 1000;
        }

            .sidebar.show {
                transform: translateX(0);
            }

            .sidebar a {
                color: white;
                text-decoration: none;
                display: block;
                padding: 10px;
                margin: 5px 0;
                border-radius: 5px;
            }

                .sidebar a:hover {
                    background: #495057;
                }

        .container-custom {
            display: flex;
            justify-content: space-between;
            padding: 20px;
        }

        .card {
            width: 48%;
        }

        #map {
            height: 350px;
            width: 100%;
            border-radius: 10px;
        }

        .default-user-image {
            width: 100px;
            height: 100px;
            border-radius: 50%;
        }

        #notifBtn {
            background-color: transparent;
            border: none;
            color: white;
        }

            #notifBtn:hover {
                color: #FFD700;
            }

        #customPopup {
            animation: fadeInUp 0.4s ease;
        }

        @@keyframes fadeInUp {
            from

        {
            transform: translateY(20px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }

        }
    </style>
</head>
<body>
    <div class="header">
        <span class="menu-toggle" onclick="toggleMenu()">☰</span>
        <span class="ms-2">Welcome, @Model.patient_name</span>

        <div class="d-flex align-items-center gap-3">
            <button class="btn btn-outline-light rounded-circle d-flex align-items-center justify-content-center position-relative"
                    id="notifBtn"
                    onclick="checkBloodAvailability()"
                    title="Check Blood Availability"
                    style="width: 40px; height: 40px; font-size: 1.2rem;">
                🔔
                <span class="position-absolute top-0 start-100 translate-middle p-1 bg-danger border border-light rounded-circle d-none"
                      id="notifDot"></span>
            </button>
            <div class="user-avatar" id="userAvatar"></div>
        </div>
    </div>

    <div class="sidebar" id="sidebar">
        <span class="menu-toggle" onclick="toggleMenu()">X</span>
        <a href="#">User Details</a>
        <a href="#">Edit Profile</a>
        <a href="/Login/Logout" class="text-danger">Logout</a>
    </div>

    <div class="content" id="content">
        <div class="container-custom">
            <div class="card p-4 shadow-lg">
                <h4 class="text-center">Patient Details</h4>
                <hr>
                <div class="text-center">
                    <img src="/profile_user.ico" alt="User" class="default-user-image">
                    <p><strong>@Model.patient_name</strong></p>
                </div>
                <p><strong>Blood Group:</strong> @Model.blood_grp</p>
                <p><strong>Email:</strong> @Model.email</p>
                <p><strong>Address:</strong> @Model.Address</p>

                <h5 class="mt-4">Location Map</h5>
                <div id="map"></div>
            </div>

            <div class="card p-4 shadow-lg">
                <h4 class="text-center">Blood Request</h4>
                <hr>
                <p>Need blood? Submit a request below.</p>
                <h3>Submit Blood Request</h3>

                <form asp-action="Create" asp-controller="BloodRequest" method="post" asp-route-userId="@Context.Request.Query["userId"]">
                    @Html.AntiForgeryToken()

                    <select class="form-control mb-2" name="RequiredBloodGroup" required>
                        <option value="">Select Required Blood Group</option>
                        <option value="A+">A+</option>
                        <option value="A-">A-</option>
                        <option value="B+">B+</option>
                        <option value="B-">B-</option>
                        <option value="O+">O+</option>
                        <option value="O-">O-</option>
                        <option value="AB+">AB+</option>
                        <option value="AB-">AB-</option>
                    </select>

                    <textarea class="form-control mb-2" name="AdditionalDetails" placeholder="Additional Details"></textarea>

                    <button class="btn w-100" style="background-color: #1E3A8A; color: white;">Submit Blood Request</button>
                </form>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success mt-3" id="successMessage">
                        @TempData["SuccessMessage"]
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        let map;
        let marker;
        const pincode = "@Model.Pincode";

        function initMapFromQuery(query) {
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}`)
                .then(res => res.json())
                .then(data => {
                    if (data && data.length > 0) {
                        const lat = parseFloat(data[0].lat);
                        const lon = parseFloat(data[0].lon);

                        if (!map) {
                            map = L.map('map').setView([lat, lon], 15);
                            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                                attribution: '&copy; OpenStreetMap contributors'
                            }).addTo(map);
                        } else {
                            map.setView([lat, lon], 15);
                            if (marker) map.removeLayer(marker);
                        }

                        marker = L.marker([lat, lon]).addTo(map)
                            .bindPopup("Location")
                            .openPopup();
                    } else {
                        alert("Location not found for the given query.");
                    }
                });
        }

        function updateMap() {
            const address = document.getElementById("address").value;
            initMapFromQuery(address);
        }

        function toggleMenu() {
            document.getElementById("sidebar").classList.toggle("show");
        }

        function showPopup(message) {
            const popup = document.getElementById("customPopup");
            const messageBox = document.getElementById("popupMessage");

            messageBox.textContent = message;
            popup.classList.remove("d-none");

            setTimeout(() => {
                hidePopup();
            }, 5000);
        }

        function hidePopup() {
            document.getElementById("customPopup").classList.add("d-none");
        }

        function checkBloodAvailability() {
            const userId = '@Context.Request.Query["userId"]';

            fetch(`/User/CheckBloodAvailability?userId=${userId}`)
                .then(res => res.json())
                .then(data => {
                    const dot = document.getElementById("notifDot");
                    if (data.available) {
                        showPopup("Blood is available for your group!");
                        dot.classList.remove("d-none");
                    } else {
                        showPopup("Sorry, currently not available.");
                        dot.classList.add("d-none");
                    }
                })
                .catch(err => console.error("Notification error:", err));
        }

        document.addEventListener("DOMContentLoaded", function () {
            const name = "@Model.patient_name".trim();
            const initials = name.split(" ").map(n => n[0]).join("").toUpperCase();
            document.getElementById("userAvatar").textContent = initials;

            initMapFromQuery(pincode);
              checkBloodAvailability();

            const successMsg = document.getElementById("successMessage");
            if (successMsg) {
                setTimeout(() => {
                    successMsg.style.transition = "opacity 0.5s ease";
                    successMsg.style.opacity = 0;
                    setTimeout(() => successMsg.style.display = "none", 500);
                }, 5000);
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom Notification Popup -->
    <div id="customPopup" class="position-fixed top-0 end-0 mt-5 me-4 p-3 bg-white border rounded shadow-lg d-none" style="z-index: 1050; max-width: 300px;">


        <div class="d-flex justify-content-between align-items-center mb-2">
            <strong class="text-primary">Notification</strong>
            <button type="button" class="btn-close" onclick="hidePopup()"></button>
        </div>
        <div id="popupMessage" class="text-dark"></div>
    </div>
</body>
</html>
